data = wtp_rej_longdata, family = binomial)
summary(PSE_notcondition)
#assign the coefficients
b0 <- 0.32973
b1 <- -69.19869
#compute overall PSE (logit=0)
pse<- -b0/b1
pse
# Define sequence of value differences to plot
value_diff_seq1 <- seq(-0.05, 0.05, length.out = 100)
# Create prediction data
pred_data1 <- data.frame(value_diff = value_diff_seq1) %>%
mutate(
linear_predictor = b0 + b1 * value_diff,
predicted_prob = 1 / (1 + exp(-linear_predictor))
)
PSE_plot1 <- ggplot(pred_data1, aes(x = value_diff, y = predicted_prob)) +
geom_line(color = "#000000", size = 1.5) +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray40") +
geom_point(aes(x = pse, y = 0.5), color = "black", size = 3, shape = 21, fill = "white") +
annotate("text", x = pse, y = 0.55, label = paste0("PSE = ", round(pse, 4)), size = 6, fontface = "bold") +
labs(
x = "Less Social                          More Social\n Dollar Difference",
y = "Probability of Social Choice"
) +
theme_classic(base_size = 14) +
theme(
panel.grid = element_blank(),
axis.title.x = element_text(size = 26, face = "bold", margin = margin(t = 25)),
axis.title.y = element_text(size = 26, face = "bold", margin = margin(r = 25)),
axis.text.x = element_text(size = 24, face = "bold"),
axis.text.y = element_text(size = 24, face = "bold"),
axis.ticks.length = unit(6, "pt")
)
# Save the plot
ggsave("PSE_plot_overall.png", plot = PSE_plot1, width = 10, height = 8, dpi = 300)
PSE_plot1 <- ggplot(pred_data1, aes(x = value_diff, y = predicted_prob)) +
geom_line(color = "#000000", size = 1.5) +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray40") +
geom_point(aes(x = pse, y = 0.5), color = "black", size = 3, shape = 21, fill = "white") +
annotate("text", x = pse, y = 0.55, label = paste0("PSE = ", round(pse, 4)), size = 6, fontface = "bold") +
labs(
x = "Less Social                                        More Social\n Dollar Difference",
y = "Probability of Social Choice"
) +
theme_classic(base_size = 14) +
theme(
panel.grid = element_blank(),
axis.title.x = element_text(size = 26, face = "bold", margin = margin(t = 25)),
axis.title.y = element_text(size = 26, face = "bold", margin = margin(r = 25)),
axis.text.x = element_text(size = 24, face = "bold"),
axis.text.y = element_text(size = 24, face = "bold"),
axis.ticks.length = unit(6, "pt")
)
# Save the plot
ggsave("PSE_plot_overall.png", plot = PSE_plot1, width = 10, height = 8, dpi = 300)
#hierarchical logistic regression for PSE with interaction of condition
PSE <- glmer(socialchoice ~ value_diff * condition_recode + (1 + value_diff | participant),
data = wtp_rej_longdata, family = binomial)
summary(PSE)
# Assign the coefficients
b0 <- 0.32937
b1 <- -69.19869
b2 <- -0.02595
b3 <- -1.61406
pse_accept <- - (b0 + b2 * -1) / (b1 + b3 * -1)
pse_reject <- - (b0 + b2 * 1) / (b1 + b3 * 1)
# Print them
pse_accept
pse_reject
value_diff_seq <- seq(-0.05, 0.05, length.out = 100)
# Coefficients from your model
b0 <- 0.32937
b1 <- -69.19869
b2 <- -0.02595
b3 <- -1.61406
# Build dataframe
pred_data <- expand.grid(
value_diff = value_diff_seq,
condition_recode = c(-1, 1)  # -1 = Acceptance, 1 = Rejection
)
# Calculate linear predictor manually
pred_data <- pred_data %>%
mutate(
condition_label = ifelse(condition_recode == -1, "Acceptance", "Rejection"),
linear_predictor = b0 + b1 * value_diff + b2 * condition_recode + b3 * value_diff * condition_recode,
predicted_prob = 1 / (1 + exp(-linear_predictor))  # logistic function
)
PSE_plot <- (
ggplot(pred_data, aes(x = value_diff, y = predicted_prob, color = condition_label)) +
geom_line(size = 1.2) +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray40") +
geom_point(data = data.frame(
value_diff = c(pse_accept, pse_reject),
predicted_prob = 0.5,
condition_label = c("Acceptance", "Rejection")
), aes(x = value_diff, y = predicted_prob, color = condition_label),
size = 3, shape = 21, fill = "white") +
scale_color_manual(
values = c("Acceptance" = "#88CCEE",
"Rejection" = "#FF6F61")
) +
labs(
title = "",
x = "Less Social                                        More Social\n Dollar Difference",
y = "Probability of Social Choice",
color = "Condition"
) +
theme_classic(base_size = 14) +
theme(
panel.grid = element_blank(),
axis.title.x = element_text(size = 26, face = "bold", margin = margin(t = 25)),
axis.title.y = element_text(size = 26, face = "bold", margin = margin(r = 25)),
axis.text.x = element_text(size = 24,face = "bold"),
axis.text.y = element_text(size = 24,face = "bold"),
legend.title = element_text(size = 24,face = "bold"),
legend.text = element_text(size = 22,face = "bold"),
axis.ticks.length = unit(6, "pt")  # Default is around 5–6 pt, go smaller if you want
)
)
# Save the plot
#ggsave("PSE_plot.png", PSE_plot, width = 6, height = 4, dpi = 300)
ggsave("PSE_plot_fixed.png", plot = PSE_plot, width = 10, height = 8, dpi = 300)
# Plot subject-level differences with group mean + SE
ggplot(onebar_df, aes(x = "", y = difference)) +
geom_jitter(width = 0.1, alpha = 0.5, color = "gray40") +  # each subject
stat_summary(fun = mean, geom = "point", size = 4, color = "skyblue") +  # mean
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "skyblue") +
ylab("Difference (Acc – Rej)") +
xlab("") +
ggtitle("Amount Spent on Social Experience") +
theme_minimal()
# Plot subject-level differences with group mean + SE
ggplot(onebar_df, aes(x = "", y = difference)) +
geom_jitter(width = 0.1, alpha = 0.5, color = "gray40") +  # each subject
stat_summary(fun = mean, geom = "point", size = 4, color = "skyblue") +  # mean
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "skyblue") +
ylab("Difference (Acc – Rej)") +
xlab("") +
ggtitle("Avg Amount Spent on Social Experiences") +
theme_minimal()
# Plot subject-level differences with group mean + SE
ggplot(onebar_df, aes(x = "", y = difference)) +
geom_jitter(width = 0.1, alpha = 0.5, color = "gray40") +  # each subject
stat_summary(fun = mean, geom = "point", size = 4, color = "darkseagreen4") +  # mean
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "darkseagreen4") +
ylab("Difference (Acc – Rej)") +
xlab("") +
ggtitle("Avg Amount Spent on Social Experiences") +
theme_minimal()
# Plot subject-level differences with group mean + SE
ggplot(onebar_df, aes(x = "", y = difference)) +
geom_jitter(width = 0.1, alpha = 0.5, color = "gray40") +  # each subject
stat_summary(fun = mean, geom = "point", size = 4, color = "darkseagreen4") +  # mean
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "darkseagreen4") +
ylab("Difference (Acc – Rej)") +
xlab("") +
ggtitle("") +
theme_minimal()
# Plot subject-level differences with group mean + SE
ggplot(onebar_df, aes(x = "", y = difference)) +
geom_jitter(width = 0.1, alpha = 0.5, color = "gray40") +  # each subject
stat_summary(fun = mean, geom = "point", size = 4, color = "darkseagreen4") +  # mean
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "darkseagreen4") +
ylab("Difference (Acc – Rej)") +
xlab("Avg Spent on Soc Experiences") +
ggtitle("") +
theme_minimal()
# Plot subject-level differences with group mean + SE
ggplot(onebar_df, aes(x = "", y = difference)) +
geom_jitter(width = 0.1, alpha = 0.5, color = "gray40") +  # each subject
stat_summary(fun = mean, geom = "point", size = 4, color = "darkseagreen4") +  # mean
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "darkseagreen4") +
ylab("Difference (Acc – Rej)") +
xlab("Participants") +
ggtitle("") +
theme_minimal()
# Plot subject-level differences with group mean + SE
ggplot(onebar_df, aes(x = "", y = difference)) +
geom_jitter(width = 0.1, alpha = 0.5, color = "gray40") +  # each subject
stat_summary(fun = mean, geom = "point", size = 4, color = "darkseagreen4") +  # mean
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "darkseagreen4") +
ylab("Spending Difference (Acc – Rej)") +
xlab("") +
ggtitle("") +
theme_minimal()
ggsave("scatter_diffspent_soc.png", plot = amtspent, width = 10, height = 8, dpi = 300)
# Plot subject-level differences with group mean + SE
scatter<-ggplot(onebar_df, aes(x = "", y = difference)) +
geom_jitter(width = 0.1, alpha = 0.5, color = "gray40") +  # each subject
stat_summary(fun = mean, geom = "point", size = 4, color = "darkseagreen4") +  # mean
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "darkseagreen4") +
ylab("Spending Difference (Acc – Rej)") +
xlab("") +
ggtitle("") +
theme_minimal()
ggsave("scatter_diffspent_soc.png", plot = scatter, width = 10, height = 8, dpi = 300)
# Plot subject-level differences with group mean + SE
scatter<-ggplot(onebar_df, aes(x = "", y = difference)) +
# Plot subject-level differences with group mean + SE
scatter<-ggplot(onebar_df, aes(x = "", y = difference)) +
geom_jitter(width = 0.1, alpha = 0.5, color = "gray40") +  # each subject
stat_summary(fun = mean, geom = "point", size = 4, color = "darkseagreen4") +  # mean
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "darkseagreen4") +
ylab("Spending Difference (Acc – Rej)") +
xlab("") +
ggtitle("") +
theme_minimal()+ theme(
panel.grid = element_blank(),
axis.title.x = element_text(size = 26, face = "bold", margin = margin(t = 25)),
axis.title.y = element_text(size = 26, face = "bold", margin = margin(r = 25)),
axis.text.x = element_text(size = 24, face = "bold"),
axis.text.y = element_text(size = 24, face = "bold"),
legend.title = element_text(size = 24, face = "bold"),
legend.text = element_text(size = 22, face = "bold"),
plot.margin = margin(t = 20, r = 20, b = 20, l = 30))
ggsave("scatter_diffspent_soc.png", plot = scatter, width = 10, height = 8, dpi = 300)
# Plot subject-level differences with group mean + SE
scatter<-ggplot(onebar_df, aes(x = "", y = difference)) +
geom_jitter(width = 0.1, alpha = 0.5, color = "gray40") +  # each subject
stat_summary(fun = mean, geom = "point", size = 4, color = "darkseagreen4") +  # mean
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "darkseagreen4") +
ylab("Spending Difference (Acc – Rej)") +
xlab("") +
ggtitle("") +
theme_minimal() + theme(
panel.grid = element_blank(),
axis.title.x = element_text(size = 26, face = "bold", margin = margin(t = 25)),
axis.title.y = element_text(size = 26, face = "bold", margin = margin(r = 25)),
axis.text.x = element_text(size = 24, face = "bold"),
axis.text.y = element_text(size = 24, face = "bold"),
legend.title = element_text(size = 24, face = "bold"),
legend.text = element_text(size = 22, face = "bold"),
plot.margin = margin(t = 20, r = 20, b = 20, l = 30)
)
ggsave("scatter_diffspent_soc.png", plot = scatter, width = 10, height = 8, dpi = 300)
# Plot subject-level differences with group mean + SE
scatter<-ggplot(onebar_df, aes(x = "", y = difference)) +
geom_jitter(width = 0.1, alpha = 0.5, color = "gray40") +  # each subject
stat_summary(fun = mean, geom = "point", size = 4, color = "darkseagreen4") +  # mean
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "darkseagreen4") +
ylab("Spending Difference (Acc – Rej)") +
xlab("Participant") +
ggtitle("") +
theme_minimal() + theme(
panel.grid = element_blank(),
axis.title.x = element_text(size = 26, face = "bold", margin = margin(t = 25)),
axis.title.y = element_text(size = 26, face = "bold", margin = margin(r = 25)),
axis.text.x = element_text(size = 24, face = "bold"),
axis.text.y = element_text(size = 24, face = "bold"),
legend.title = element_text(size = 24, face = "bold"),
legend.text = element_text(size = 22, face = "bold"),
plot.margin = margin(t = 20, r = 20, b = 20, l = 30)
)
ggsave("scatter_diffspent_soc.png", plot = scatter, width = 10, height = 8, dpi = 300)
# Plot subject-level differences with group mean + SE
scatter<-ggplot(onebar_df, aes(x = "", y = difference)) +
geom_jitter(width = 0.1, alpha = 0.5, color = "gray40") +  # each subject
stat_summary(fun = mean, geom = "point", size = 4, color = "darkseagreen4") +  # mean
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, color = "darkseagreen4") +
ylab("Spending Difference (Acc – Rej)") +
xlab("Participants") +
ggtitle("") +
theme_minimal() + theme(
panel.grid = element_blank(),
axis.title.x = element_text(size = 26, face = "bold", margin = margin(t = 25)),
axis.title.y = element_text(size = 26, face = "bold", margin = margin(r = 25)),
axis.text.x = element_text(size = 24, face = "bold"),
axis.text.y = element_text(size = 24, face = "bold"),
legend.title = element_text(size = 24, face = "bold"),
legend.text = element_text(size = 22, face = "bold"),
plot.margin = margin(t = 20, r = 20, b = 20, l = 30)
)
ggsave("scatter_diffspent_soc.png", plot = scatter, width = 10, height = 8, dpi = 300)
# Run a paired t-test
rej_acc_stress <- t.test(rej$stress_mean,
acc$stress_mean,
paired = TRUE,
alternative = "two.sided")
summary(rej_acc_stress)
# Run a paired t-test
rej_acc_stress <- t.test(rej$stress_mean,
acc$stress_mean,
paired = TRUE,
alternative = "two.sided")
summary(rej_acc_stress)
print(rej_acc_stress)
# Compute SD separately for Rejection and Acceptance
sd_rej <- safe_sd(rej$stress_mean)
# Standard deviation for Rejection
sd_rej <- sd(rej_long$social_decisionprice_mean, na.rm = TRUE)
# Standard deviation for Acceptance
sd_acc <- sd(acc_long$social_decisionprice_mean, na.rm = TRUE)
# Check values
print(paste("SD Rejection:", sd_rej))
print(paste("SD Acceptance:", sd_acc))
# Plot: Amount Spent on Social by Condition
rej_acc_stress <- ggplot(wtp_rej_shortdata, aes(x = condition_recode, y = mean_spent, fill = condition_recode)) +
geom_bar(stat = "identity", position = position_dodge(), color = "black", alpha = 0.8) +
geom_errorbar(aes(ymin = mean_spent - sd_spent, ymax = mean_spent + sd_spent),
width = 0.1, position = position_dodge(.9), color = "black", size = 0.8) +
scale_fill_manual(name = "Condition", values = c("Rejection" = "#FF6F61", "Acceptance" = "#88CCEE")) +
labs(
x = "Social Condition",
y = "Stress"
) +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.title.x = element_text(size = 26, face = "bold", margin = margin(t = 25)),
axis.title.y = element_text(size = 26, face = "bold", margin = margin(r = 25)),
axis.text.x = element_text(size = 24, face = "bold"),
axis.text.y = element_text(size = 24, face = "bold"),
legend.title = element_text(size = 24, face = "bold"),
legend.text = element_text(size = 22, face = "bold"),
plot.margin = margin(t = 20, r = 20, b = 20, l = 30)
)
# Save the plot
ggsave("stress.png", plot = rej_acc_stress, width = 10, height = 8, dpi = 300)
# Plot: Amount Spent on Social by Condition
rej_acc_stress <- ggplot(wtp_rej_shortdata, aes(x = condition_recode, y = stress_mean, fill = condition_recode)) +
geom_bar(stat = "identity", position = position_dodge(), color = "black", alpha = 0.8) +
geom_errorbar(aes(ymin = mean_spent - sd_spent, ymax = mean_spent + sd_spent),
width = 0.1, position = position_dodge(.9), color = "black", size = 0.8) +
scale_fill_manual(name = "Condition", values = c("Rejection" = "#FF6F61", "Acceptance" = "#88CCEE")) +
labs(
x = "Social Condition",
y = "Stress"
) +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.title.x = element_text(size = 26, face = "bold", margin = margin(t = 25)),
axis.title.y = element_text(size = 26, face = "bold", margin = margin(r = 25)),
axis.text.x = element_text(size = 24, face = "bold"),
axis.text.y = element_text(size = 24, face = "bold"),
legend.title = element_text(size = 24, face = "bold"),
legend.text = element_text(size = 22, face = "bold"),
plot.margin = margin(t = 20, r = 20, b = 20, l = 30)
)
# Save the plot
ggsave("stress.png", plot = rej_acc_stress, width = 10, height = 8, dpi = 300)
# Plot: Amount Spent on Social by Condition
rej_acc_stress <- ggplot(wtp_rej_shortdata, aes(x = condition_recode, y = stress_mean, fill = condition_recode)) +
geom_bar(stat = "identity", position = position_dodge(), color = "black", alpha = 0.8) +
geom_errorbar(aes(ymin = stress_mean - sd_spent, ymax = stress_mean + sd_spent),
width = 0.1, position = position_dodge(.9), color = "black", size = 0.8) +
scale_fill_manual(name = "Condition", values = c("Rejection" = "#FF6F61", "Acceptance" = "#88CCEE")) +
labs(
x = "Social Condition",
y = "Stress"
) +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.title.x = element_text(size = 26, face = "bold", margin = margin(t = 25)),
axis.title.y = element_text(size = 26, face = "bold", margin = margin(r = 25)),
axis.text.x = element_text(size = 24, face = "bold"),
axis.text.y = element_text(size = 24, face = "bold"),
legend.title = element_text(size = 24, face = "bold"),
legend.text = element_text(size = 22, face = "bold"),
plot.margin = margin(t = 20, r = 20, b = 20, l = 30)
)
# Save the plot
ggsave("stress.png", plot = rej_acc_stress, width = 10, height = 8, dpi = 300)
# Compute difference scores for paired standard error
diff_scores <- acc$stress_mean - rej$stress_mean
se_diff <- sd(diff_scores, na.rm = TRUE) / sqrt(sum(!is.na(diff_scores)))
# Compute means per condition
mean_rej <- mean(rej$stress_mean, na.rm = TRUE)
mean_acc <- mean(acc$stress_mean, na.rm = TRUE)
# Build summary dataframe
summary_data <- data.frame(
condition = factor(c("Rejection", "Acceptance"), levels = c("Rejection", "Acceptance")),
mean_stress = c(mean_rej, mean_acc),
se_stress = c(se_diff, se_diff)  # same SE for both bars
)
# Plot
stress<- ggplot(summary_data, aes(x = condition, y = mean_stress, fill = condition)) +
geom_bar(stat = "identity", color = "black", alpha = 0.8, width = 0.5) +
geom_errorbar(aes(ymin = mean_stress - se_stress, ymax = mean_stress + se_stress),
width = 0.2, color = "black") +
scale_fill_manual(values = c("Rejection" = "#FF6F61", "Acceptance" = "#88CCEE")) +
ylab("Mean Stress") +
xlab("Condition") +
theme_minimal()
# Standard deviation for Rejection
sd_rej <- sd(rej_long$social_decisionprice_mean, na.rm = TRUE)
# Save the plot
ggsave("stress.png", plot = rej_acc_stress, width = 10, height = 8, dpi = 300)
# Run a paired t-test
rej_acc_stress <- t.test(rej$stress_mean,
acc$stress_mean,
paired = TRUE,
alternative = "two.sided")
print(rej_acc_stress)
# Compute difference scores for paired standard error
diff_scores <- acc$stress_mean - rej$stress_mean
se_diff <- sd(diff_scores, na.rm = TRUE) / sqrt(sum(!is.na(diff_scores)))
# Compute means per condition
mean_rej <- mean(rej$stress_mean, na.rm = TRUE)
mean_acc <- mean(acc$stress_mean, na.rm = TRUE)
# Build summary dataframe
summary_data <- data.frame(
condition = factor(c("Rejection", "Acceptance"), levels = c("Rejection", "Acceptance")),
mean_stress = c(mean_rej, mean_acc),
se_stress = c(se_diff, se_diff)  # same SE for both bars
)
# Plot
stress<- ggplot(summary_data, aes(x = condition, y = mean_stress, fill = condition)) +
geom_bar(stat = "identity", color = "black", alpha = 0.8, width = 0.5) +
geom_errorbar(aes(ymin = mean_stress - se_stress, ymax = mean_stress + se_stress),
width = 0.2, color = "black") +
scale_fill_manual(values = c("Rejection" = "#FF6F61", "Acceptance" = "#88CCEE")) +
ylab("Mean Stress") +
xlab("Condition") +
theme_minimal()
# Save the plot
ggsave("stress.png", plot = rej_acc_stress, width = 10, height = 8, dpi = 300)
# Plot
stress<- ggplot(summary_data, aes(x = condition, y = mean_stress, fill = condition)) +
geom_bar(stat = "identity", color = "black", alpha = 0.8, width = 0.5) +
geom_errorbar(aes(ymin = mean_stress - se_stress, ymax = mean_stress + se_stress),
width = 0.2, color = "black") +
scale_fill_manual(values = c("Rejection" = "#FF6F61", "Acceptance" = "#88CCEE")) +
ylab("Mean Stress") +
xlab("Condition") +
theme_minimal()
# Save the plot
ggsave("stress.png", plot = stress, width = 10, height = 8, dpi = 300)
# Plot
stress<- ggplot(summary_data, aes(x = condition, y = mean_stress, fill = condition)) +
geom_bar(stat = "identity", color = "black", alpha = 0.8, width = 0.5) +
geom_errorbar(aes(ymin = mean_stress - se_stress, ymax = mean_stress + se_stress),
width = 0.2, color = "black") +
scale_fill_manual(values = c("Rejection" = "#FF6F61", "Acceptance" = "#88CCEE")) +
ylab("Mean Stress") +
xlab("Condition") +
theme_minimal()  + theme(
panel.grid = element_blank(),
axis.title.x = element_text(size = 26, face = "bold", margin = margin(t = 25)),
axis.title.y = element_text(size = 26, face = "bold", margin = margin(r = 25)),
axis.text.x = element_text(size = 24, face = "bold"),
axis.text.y = element_text(size = 24, face = "bold"),
legend.title = element_text(size = 24, face = "bold"),
legend.text = element_text(size = 22, face = "bold"),
plot.margin = margin(t = 20, r = 20, b = 20, l = 30)
)
# Save the plot
ggsave("stress.png", plot = stress, width = 10, height = 8, dpi = 300)
# Plot
stress<- ggplot(summary_data, aes(x = condition, y = mean_stress, fill = condition)) +
geom_bar(stat = "identity", color = "black", alpha = 0.8, width = 0.5) +
geom_errorbar(aes(ymin = mean_stress - se_stress, ymax = mean_stress + se_stress),
width = 0.2, color = "black") +
scale_fill_manual(values = c("Rejection" = "#FF6F61", "Acceptance" = "#88CCEE")) +
ylab("Self-Reported Stress") +
xlab("Condition") +
theme_minimal()  + theme(
panel.grid = element_blank(),
axis.title.x = element_text(size = 26, face = "bold", margin = margin(t = 25)),
axis.title.y = element_text(size = 26, face = "bold", margin = margin(r = 25)),
axis.text.x = element_text(size = 24, face = "bold"),
axis.text.y = element_text(size = 24, face = "bold"),
legend.title = element_text(size = 24, face = "bold"),
legend.text = element_text(size = 22, face = "bold"),
plot.margin = margin(t = 20, r = 20, b = 20, l = 30)
)
# Save the plot
ggsave("stress.png", plot = stress, width = 10, height = 8, dpi = 300)
# Run a paired t-test
rej_acc_salience <- t.test(rej$salience_mean,
acc$salience_mean,
paired = TRUE,
alternative = "two.sided")
print(rej_acc_salience)
# Compute difference scores for paired standard error
diff_scores <- acc$salience_mean - rej$salience_mean
se_diff <- sd(diff_scores, na.rm = TRUE) / sqrt(sum(!is.na(diff_scores)))
# Compute means per condition
mean_rej <- mean(rej$salience_mean, na.rm = TRUE)
mean_acc <- mean(acc$salience_mean, na.rm = TRUE)
# Build summary dataframe
summary_data <- data.frame(
condition = factor(c("Rejection", "Acceptance"), levels = c("Rejection", "Acceptance")),
mean_salience = c(mean_rej, mean_acc),
se_salience = c(se_diff, se_diff)  # same SE for both bars
)
# Save the plot
ggsave("salience.png", plot = stress, width = 10, height = 8, dpi = 300)
# Plot
salience<- ggplot(summary_data, aes(x = condition, y = mean_salience, fill = condition)) +
geom_bar(stat = "identity", color = "black", alpha = 0.8, width = 0.5) +
geom_errorbar(aes(ymin = mean_salience - se_salience, ymax = mean_salience + se_salience),
width = 0.2, color = "black") +
scale_fill_manual(values = c("Rejection" = "#FF6F61", "Acceptance" = "#88CCEE")) +
ylab("Likelihood to Share in Future") +
xlab("Condition") +
theme_minimal()  + theme(
panel.grid = element_blank(),
axis.title.x = element_text(size = 26, face = "bold", margin = margin(t = 25)),
axis.title.y = element_text(size = 26, face = "bold", margin = margin(r = 25)),
axis.text.x = element_text(size = 24, face = "bold"),
axis.text.y = element_text(size = 24, face = "bold"),
legend.title = element_text(size = 24, face = "bold"),
legend.text = element_text(size = 22, face = "bold"),
plot.margin = margin(t = 20, r = 20, b = 20, l = 30)
)
# Save the plot
ggsave("salience.png", plot = stress, width = 10, height = 8, dpi = 300)
# Save the plot
ggsave("salience.png", plot = salience, width = 10, height = 8, dpi = 300)
